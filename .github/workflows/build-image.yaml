name: Build Image and Create Release

on:
  push:
    branches:
      - master
  schedule:
    # Run once a week on Monday at 03:00 UTC
    - cron: '0 3 * * 1'

jobs:
  build_and_release:
    runs-on: ubuntu-24.04-arm

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Copy env
        run: cp .env.example .env

      - name: Get SSH keys from GitHub
        run: wget https://github.com/${{ github.repository_owner }}.keys -O ./input/config/authorized_keys

      - name: Create tag
        id: create-tag
        run: echo "RELEASE_TAG=v$(date +'%Y-%m-%d')-${GITHUB_SHA:0:7}" >> "$GITHUB_ENV"

      - name: Set version
        run: echo "$RELEASE_TAG" >> ./input/etc/raspi-k3s-version

      - name: Run build script
        run: ./build_image.sh
        
      - name: Get version information
        id: get-versions
        run: |
          if [ -f output/versions.txt ]; then
            VERSIONS_CONTENT=$(cat output/versions.txt)
            echo "versions_content<<EOF" >> $GITHUB_ENV
            echo "$VERSIONS_CONTENT" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          else
            echo "versions_content=Version information not available" >> $GITHUB_ENV
          fi

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "${{ env.RELEASE_TAG }}"
          name: "Release ${{ env.RELEASE_TAG }}"
          body: |
            ## Versions
            
            ${{ env.versions_content }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          files: |
            output/sdcard.img.gz
            output/sdcard.img.gz.sha256
            output/sdcard_update.img.gz
            output/sdcard_update.img.gz.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
